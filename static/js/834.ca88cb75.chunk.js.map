{"version":3,"file":"static/js/834.ca88cb75.chunk.js","mappings":"4OAMaA,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAkBM,GAAlB,WACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAcO,GAAd,WAwBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaL,EAAaM,IAAI,SAChCD,IACFE,EAAAA,EAAAA,IAAgBF,GAAYG,MAAK,SAAAC,GAC/B,IACEP,GAAa,GACbJ,EAAUW,EAKX,CAJC,MAAOC,GACPP,EAASO,EAAMC,QAChB,CALD,QAMET,GAAa,EACd,CACF,GAEJ,GAAE,CAACF,KAGF,4BACE,kBAAMY,SAxBW,SAAAC,GACnBZ,EAAgB,CAAEa,MAAOD,EAAEE,OAAO,GAAGC,QACrCH,EAAEI,gBAEH,EAoBG,WACE,kBAAOC,KAAK,OAAOC,YAAY,eAC/B,mBAAQD,KAAK,SAAb,wBAEF,SAACE,EAAA,EAAD,CAAcvB,OAAQA,MAG3B,ECrCD,EAJe,WACb,OAAO,SAACF,EAAD,GACR,C,+LCFD0B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQC,KAAI,YACjC,MAAO,CACHC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAMvC,KARwB,2CAAH,qDAgBXtB,EAAe,mCAAG,WAAMO,GAAN,uFACNO,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBR,EADrB,2BADM,cACvBU,EADuB,yBAItBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KAT4B,2CAAH,sDAafC,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,oBACQT,EADR,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDASfO,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,4BACiBX,EADjB,oBADM,cACvBE,EADuB,yBAItBA,EAASC,KAAKS,KAAKP,KAAI,YAC5B,MAAO,CACLQ,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CT,GALqE,EAATA,GAO/D,KAX4B,2CAAH,sDAgBfU,EAAgB,mCAAG,WAAML,GAAN,uFACPZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,4BACiBX,EADjB,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLY,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCZ,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD,oFCzDhBR,EAAe,SAAC,GAAgB,IAAdvB,EAAa,EAAbA,OACvB4C,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACK,wBACE7C,EAAO8B,KAAI,SAAAgB,GAAK,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMf,IAAMiB,MAAO,CAAEC,KAAML,GAAhD,SACGE,EAAMd,SAFFc,EAAMf,GADE,OAU1B,C","sources":["components/SearchForm/SearchForm.jsx","Pages/Movies/Movies.jsx","Utils/api/ApiMovie.jsx","components/TrendingList/TrendingList.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../../Utils/api/ApiMovie';\nimport { useEffect, useState } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = e => {\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      getSearchMovies(movieTitle).then(searchMovies => {\n        try {\n          setIsLoading(true);\n          setMovies(searchMovies);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      });     \n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Search...\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};\n// Компонент який рендерить список фільмів по пошуку\n// useSearchParams - читає та змінює строки запита\n// useParams повертає об'єкт з усіма динамичиними параметрами, які є в поточному URL","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9e6afb981eabd9c0b16e6cda6eacb393';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => { \n  return {\n      id,\n      title,\n    };\n   \n  });\n  \n };\n\n// getTrending - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// Створюємо API запит через HTTP клієнта axios \n// Перебираэмо відповідь та получаємо доступ до параметрів id та title\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n// getSearchMovies - пошук фільму за ключовим словом на сторінці фільмів\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n// getMovieDetails - запит повної інформації про фільм для сторінки кінофільму.\n\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\n// getMovieCredits - запит інформації про акторський склад для сторінки кінофільму.\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n// getMoviesReviews - запит оглядів для сторінки кінофільму.","import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n         <ul>\n          {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title} \n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n// Описуємо рендер домашню сторінку \n// Link - посилання на сторінку movies (шлях to={`/movies/${movie.id}`} ) - детальна інформація про фільм\n// useLocation - повертає об'ект розміщення, який предствляє поточний URL "],"names":["SearchForm","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","setIsLoading","setError","useEffect","movieTitle","get","getSearchMovies","then","searchMovies","error","message","onSubmit","e","query","target","value","preventDefault","type","placeholder","TrendingList","axios","API_KEY","getTrending","response","data","results","map","id","title","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content","location","useLocation","movie","to","state","from"],"sourceRoot":""}