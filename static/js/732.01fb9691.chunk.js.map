{"version":3,"file":"static/js/732.01fb9691.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQC,KAAI,YACjC,MAAO,CACHC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAMvC,KARwB,2CAAH,qDAgBXC,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBS,EADrB,2BADM,cACvBP,EADuB,yBAItBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KAT4B,2CAAH,sDAafG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,oBACQX,EADR,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDASfS,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAAA,EAAAA,IAAA,iBACXc,EADW,4BACiBb,EADjB,oBADM,cACvBE,EADuB,yBAItBA,EAASC,KAAKW,KAAKT,KAAI,YAC5B,MAAO,CACLU,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CX,GALqE,EAATA,GAO/D,KAX4B,2CAAH,sDAgBfY,EAAgB,mCAAG,WAAML,GAAN,uFACPd,EAAAA,EAAAA,IAAA,iBACXc,EADW,4BACiBb,EADjB,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLc,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCd,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD,6HC3B7B,EA3Ba,WACX,IACA,ECJ6B,SAACK,GAC9B,OAAwCU,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAOA,OAJAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAgBD,GAASc,MAAK,SAAAC,GAAO,OACnCH,EAAgBG,EADmB,GAEtC,GAAE,CAACf,IACG,CAAEW,aAAAA,EACV,CDL0BK,EADLC,EAAAA,EAAAA,MAAZjB,SACAW,EAAR,EAAQA,aAER,OAAKA,GAGH,0BACE,wBACGA,EAAajB,KAAI,SAAAS,GAChB,OACE,2BACE,gBAAKe,MAAO,IAAKC,IAAG,0DAAqDhB,EAAKG,cAAgBc,IAAKjB,EAAKC,QACxG,uBAAID,EAAKC,QACT,uCAAeD,EAAKE,eAHbF,EAAKR,GAMjB,SAbmB,SAAC0B,EAAA,EAAD,GAiB3B,C","sources":["Utils/api/ApiMovie.jsx","components/Cast/Cast.jsx","Utils/hooks/useMovieCredits.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9e6afb981eabd9c0b16e6cda6eacb393';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => { \n  return {\n      id,\n      title,\n    };\n   \n  });\n  \n };\n\n// getTrending - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// Створюємо API запит через HTTP клієнта axios \n// Перебираэмо відповідь та получаємо доступ до параметрів id та title\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n// getSearchMovies - пошук фільму за ключовим словом на сторінці фільмів\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n// getMovieDetails - запит повної інформації про фільм для сторінки кінофільму.\n\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\n// getMovieCredits - запит інформації про акторський склад для сторінки кінофільму.\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n// getMoviesReviews - запит оглядів для сторінки кінофільму.","import { useParams } from 'react-router-dom';\nimport { useMovieCredits } from 'Utils/hooks/useMovieCredits';\nimport { Loader } from '../Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { movieCredits } = useMovieCredits(movieId);\n\n  if (!movieCredits) return <Loader />;\n\n  return (\n    <div>\n      <ul>\n        {movieCredits.map(cast => {\n          return (\n            <li key={cast.id}>\n              <img width={170} src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`} alt={cast.name} />\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n// Компонент який рендерить список акторів\n// useParams повертає об'єкт з усіма динамичиними параметрами, які є в поточному URL","import { getMovieCredits } from '../api/ApiMovie';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieCredits = (movieId) => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  \n\n  useEffect(() => {\n    getMovieCredits(movieId).then(movCred => \n      setMovieCredits(movCred));\n  }, [movieId]);\n  return { movieCredits };\n};\n// Описуємо кастомний хук який відповідає за список акторів"],"names":["axios","API_KEY","getTrending","response","data","results","map","id","title","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content","useState","movieCredits","setMovieCredits","useEffect","then","movCred","useMovieCredits","useParams","width","src","alt","Loader"],"sourceRoot":""}