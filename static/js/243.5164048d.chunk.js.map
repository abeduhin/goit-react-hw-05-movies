{"version":3,"file":"static/js/243.5164048d.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQC,KAAI,YACjC,MAAO,CACHC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAMvC,KARwB,2CAAH,qDAgBXC,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBS,EADrB,2BADM,cACvBP,EADuB,yBAItBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KAT4B,2CAAH,sDAafG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,EAAAA,IAAA,iBACXY,EADW,oBACQX,EADR,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDASfS,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAAA,EAAAA,IAAA,iBACXc,EADW,4BACiBb,EADjB,oBADM,cACvBE,EADuB,yBAItBA,EAASC,KAAKW,KAAKT,KAAI,YAC5B,MAAO,CACLU,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CX,GALqE,EAATA,GAO/D,KAX4B,2CAAH,sDAgBfY,EAAgB,mCAAG,WAAML,GAAN,uFACPd,EAAAA,EAAAA,IAAA,iBACXc,EADW,4BACiBb,EADjB,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLc,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCd,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD,oHC5B7B,EA3BgB,WACd,IACA,ECH6B,SAAAK,GAC7B,OAAmCU,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAqBC,EAArB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAiBP,GAASc,MAAK,SAAAC,GAAM,OAAIH,EAAWG,EAAf,GACtC,GAAE,CAACf,IACG,CAAEW,aAAAA,EACV,CDJ0BK,EADLC,EAAAA,EAAAA,MAAZjB,SACAW,EAAR,EAAQA,aAER,OACE,2BAC4B,KAAb,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcO,UACb,sEAEF,wBACGP,EAAajB,KAAI,SAAAyB,GAChB,OACE,2BACE,oCAAYA,EAAOX,WACnB,uBAAIW,EAAOV,YAFJU,EAAOxB,GAKnB,QAIR,C","sources":["Utils/api/ApiMovie.jsx","components/Reviews/Reviews.jsx","Utils/hooks/useMovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9e6afb981eabd9c0b16e6cda6eacb393';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => { \n  return {\n      id,\n      title,\n    };\n   \n  });\n  \n };\n\n// getTrending - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// Створюємо API запит через HTTP клієнта axios \n// Перебираэмо відповідь та получаємо доступ до параметрів id та title\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n// getSearchMovies - пошук фільму за ключовим словом на сторінці фільмів\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n// getMovieDetails - запит повної інформації про фільм для сторінки кінофільму.\n\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\n// getMovieCredits - запит інформації про акторський склад для сторінки кінофільму.\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n// getMoviesReviews - запит оглядів для сторінки кінофільму.","import { useParams } from 'react-router-dom';\nimport { useMovieReviews } from 'Utils/hooks/useMovieReviews';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { movieReviews } = useMovieReviews(movieId);\n\n  return (\n    <div>\n      {movieReviews?.length === 0 && (\n        <p>We don't have any reviews for this movies</p>\n      )}\n      <ul>\n        {movieReviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n\n// Компонент який рендерить список відгуків\n// useParams повертає об'єкт з усіма динамичиними параметрами, які є в поточному URL","import {getMoviesReviews} from '../api/ApiMovie';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieReviews = movieId => {\n  const [movieReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMoviesReviews(movieId).then(movRev => setReviews(movRev));\n  }, [movieId]);\n  return { movieReviews };\n};\n//  Описуємо хук який відповідає за відгуки про фільм"],"names":["axios","API_KEY","getTrending","response","data","results","map","id","title","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content","useState","movieReviews","setReviews","useEffect","then","movRev","useMovieReviews","useParams","length","review"],"sourceRoot":""}