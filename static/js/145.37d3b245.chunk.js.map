{"version":3,"file":"static/js/145.37d3b245.chunk.js","mappings":"mOACA,EAA4B,oCAA5B,EAA0E,kCAA1E,EAAqH,iC,SCuErH,EAnE0B,WAAO,IAAD,IAE9B,ECJ6B,SAAAA,GAC7B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAAS,OAAIJ,EAAgBI,EAApB,GACxC,GAAE,CAACP,IAEG,CAAEE,aAAAA,EACV,CDJ0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAIDQ,EAAM,qBADIC,EAAAA,EAAAA,MACQC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAGxC,OACE,4BACE,UAAC,KAAD,CAAMC,GAAIJ,EAAV,UACG,KACD,cAAGK,UAAWC,EAAd,yBAEF,iBAAKD,UAAWC,EAAhB,WAEA,gBACEC,IAAG,yDAAoDf,EAAagB,aACpEC,IAAI,mCAGJ,iBAAKJ,UAAWC,EAAhB,WAEF,0BACGd,EAAakB,MADhB,KAEGlB,EAAamB,aACVnB,EAAamB,aAAaC,UAAU,EAAG,GACvC,GAJN,QASA,uCACc,IACXpB,EAAaqB,aACVC,KAAKC,OAAmC,GAA5BvB,EAAaqB,cAAmBG,QAAQ,GACpD,GAJN,QAOA,sCACA,uBAAIxB,EAAayB,YAEjB,oCACA,uBACGzB,EAAa0B,OACV1B,EAAa0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAClD,YAKN,mDAEA,2BACE,yBACE,SAAC,KAAD,CAAMlB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C,+LEpEDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQT,KAAI,YACjC,MAAO,CACHU,GAFgD,EAAhBA,GAGhCnB,MAHgD,EAAZA,MAMvC,KARwB,2CAAH,qDAgBXoB,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBO,EADrB,2BADM,cACvBL,EADuB,yBAItBA,EAASC,KAAKC,QAAQT,KAAI,YAC/B,MAAO,CACLU,GAFgD,EAAhBA,GAGhCnB,MAHgD,EAAZA,MAKvC,KAT4B,2CAAH,sDAaff,EAAe,mCAAG,WAAML,GAAN,uFACNiC,EAAAA,EAAAA,IAAA,iBACXjC,EADW,oBACQkC,EADR,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDASfK,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACiBT,EADjB,oBADM,cACvBE,EADuB,yBAItBA,EAASC,KAAKO,KAAKf,KAAI,YAC5B,MAAO,CACLE,KAFqE,EAAxCA,KAG7Bc,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CP,GALqE,EAATA,GAO/D,KAX4B,2CAAH,sDAgBfQ,EAAgB,mCAAG,WAAMJ,GAAN,uFACPV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACiBT,EADjB,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQT,KAAI,YAC/B,MAAO,CACLmB,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCV,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD","sources":["webpack://react-homework-template/./src/Pages/MovieDetailsPage/MovieDetailsPage.module.css?1154","Pages/MovieDetailsPage/MovieDetailsPage.jsx","Utils/hooks/useMovieDetails.jsx","Utils/api/ApiMovie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__l5vtn\",\"wrapper\":\"MovieDetailsPage_wrapper__q43po\",\"goBack\":\"MovieDetailsPage_goBack__8l08x\"};","import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useMovieDetails } from 'Utils/hooks/useMovieDetails';\nimport css from './MovieDetailsPage.module.css';\n\n\n const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movieDetails } = useMovieDetails(movieId);\n\n\n  const location = useLocation();\n   const goBack = location.state?.from ?? '/';\n  //  описуємо перехід на попереднє місце знаходження (?? -означає null '' - валідні)\n\n  return (\n    <div>\n      <Link to={goBack}>\n        {' '}\n        <p className={css.goBack}>Go back</p>\n      </Link> \n      <div className={css.container}>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movieDetails.poster_path}`}\n        alt=\"{movieDetails.original_title}\"\n        />\n        \n        <div className={css.wrapper}>\n\n      <h2>\n        {movieDetails.title} (\n        {movieDetails.release_date\n          ? movieDetails.release_date.substring(0, 4)\n          : ''}\n        )\n      </h2>\n\n\n      <p>\n        User Score:{' '}\n        {movieDetails.vote_average\n          ? Math.fround(movieDetails.vote_average * 10).toFixed(0)\n          : ''}\n        %\n      </p>\n      <h3>Overview</h3>\n      <p>{movieDetails.overview}</p>\n\n      <h4>Genres</h4>\n      <p>\n        {movieDetails.genres\n          ? movieDetails.genres.map(genre => genre.name).join(' ')\n          : ''}\n        </p>\n      </div>\n      </div>\n\n      <p>Additional information</p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link> \n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n// ОПисуємо рендер сторинці з детальним описом фільму та линком ПОВЕРТАЙСЯ","import {getMovieDetails} from '../api/ApiMovie';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(movDetail => setMovieDetails(movDetail));\n  }, [movieId]);\n\n  return { movieDetails };\n};\n//  Описуємо хук який відповідає за детальнк інформацію про фільм","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9e6afb981eabd9c0b16e6cda6eacb393';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => { \n  return {\n      id,\n      title,\n    };\n   \n  });\n  \n };\n\n// getTrending - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// Створюємо API запит через HTTP клієнта axios \n// Перебираэмо відповідь та получаємо доступ до параметрів id та title\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n// getSearchMovies - пошук фільму за ключовим словом на сторінці фільмів\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n// getMovieDetails - запит повної інформації про фільм для сторінки кінофільму.\n\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\n// getMovieCredits - запит інформації про акторський склад для сторінки кінофільму.\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n// getMoviesReviews - запит оглядів для сторінки кінофільму."],"names":["movieId","useState","movieDetails","setMovieDetails","useEffect","getMovieDetails","then","movDetail","useMovieDetails","useParams","goBack","useLocation","state","from","to","className","css","src","poster_path","alt","title","release_date","substring","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","axios","API_KEY","getTrending","response","data","results","id","getSearchMovies","query","getMovieCredits","moviesId","cast","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}